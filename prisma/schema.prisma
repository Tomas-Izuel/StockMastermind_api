// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Family {
  id Int @id @default(autoincrement())
  name String
  articles Article[]
}

model Article {
  id Int @id @default(autoincrement())
  code String
  name String
  model String
  salePrice Float
  purchasePrice Float
  stock Int
  repositionCount Int
  requestPoint Int
  orderArticles OrderArticle[]
  saleArticles SaleArticle[]
  familyId Int
  family Family @relation(fields: [familyId], references: [id])
}

model OrderArticle {
  id Int @id @default(autoincrement())
  articleId Int
  article Article @relation(fields: [articleId], references: [id])
  orderId Int
  order Order @relation(fields: [orderId], references: [id])
  quantity Int
  subtotal Float
}

model Order {
  id Int @id @default(autoincrement())
  date DateTime
  orderArticles OrderArticle[]
  providerId Int
  provider Provider @relation(fields: [providerId], references: [id])
  orderStatusId Int
  orderStatus OrderStatus @relation(fields: [orderStatusId], references: [id])
}

model Provider {
  id Int @id @default(autoincrement())
  name String
  orders Order[]
}

model OrderStatus {
  id Int @id @default(autoincrement())
  status String
  orders Order[]
}

model SaleArticle {
  id Int @id @default(autoincrement())
  articleId Int
  article Article @relation(fields: [articleId], references: [id])
  saleId Int
  sale Sale @relation(fields: [saleId], references: [id])
  quantity Int
  subtotal Float
}

model Sale {
  id Int @id @default(autoincrement())
  date DateTime
  saleArticles SaleArticle[]
  clientId Int
  client Client @relation(fields: [clientId], references: [id])
  saleStatusId Int
  saleStatus SaleStatus @relation(fields: [saleStatusId], references: [id])
}

model Client {
  id Int @id @default(autoincrement())
  name String
  sales Sale[]
}

model SaleStatus {
  id Int @id @default(autoincrement())
  status String
  sales Sale[]
}